import smithwaterman, pairsio


def test_smith_waterman():
    # two short sequences
    seq1 = 'GAP'
    seq2 = 'APG'
    seq1_aligned, seq2_aligned, glob_max_score = smithwaterman.main('submats/BLOSUM50', seq1, seq2)
    print('Score: %d' % glob_max_score)
    assert seq1_aligned == 'AP' and seq2_aligned == 'AP'

    # two short sequences, introduce gap in one
    seq1 = 'ABCDXEFG'
    seq2 = 'ABCDEFG'
    seq1_aligned, seq2_aligned, glob_max_score = smithwaterman.main('submats/BLOSUM50', seq1, seq2)
    print('Score: %d' % glob_max_score)
    #expect local alignment, not global
    assert seq1_aligned == '--EFG' and seq2_aligned == 'CDEFG'

    # two 20 AA long sequences with 15 AA overlap and 5 AA overhang
    seq1 = 'TKLAVIGAGAVGSTLAFAAA'
    seq2 = 'IGAGAVGSTLAFAAAQRGIA'
    seq1_aligned, seq2_aligned, glob_max_score = smithwaterman.main('submats/BLOSUM50', seq1, seq2)
    print('Score: %d' % glob_max_score)
    assert seq1_aligned == 'IGAGAVGSTLAFAAA' and seq2_aligned == 'IGAGAVGSTLAFAAA'

    #long-ish sequences
    seq1 = 'PTKLAVIGAGAVGSTLAFAAAQRGIAREIVLEDIAKE' + \
    'RVEAEVLDMQHGSSFYPTVSIDGSDDPEICRDADMVV'
    seq2 = 'ITAGPRQKPGQSRLELVGATVNILKAIMPNLVKVAPN' + \
    'AIYMLITNPVDIATHVAQKLTGLPENQIFGSG'

    seq1_aligned, seq2_aligned, glob_max_score = smithwaterman.main('submats/BLOSUM50', seq1, seq2)
    print('Score: %d' % glob_max_score)

    #longer (200)
    seq1 = 'QAWWHRDFICMTYWMNPPKIAQHGMHEHWVEQKHSYASVGCWKHWVNLQGVCFCSIYIFW' + \
    'INPRDNEGTPLNTQYFDSHLCAAPCAMMYHEQGWREKITLSQRQKTNDYHSGVMFTLEVD' + \
    'FVVKAGRKSEFPGESPTYIWHRSPIRENDCVALILKCNMSGMYRPWVDQYKMNQALFTRR' + \
    'FLYFPCNGAELTTKICDMDD'

    seq2 = 'RYSRTFMHFCPPNQDIKCPHLVDYWPWGLPNFQGIRGSQLAQSKVDCMIDHQGIWTDFAQ' + \
    'LEARSNFTDTIKVVTKHRIWERSPMTSFPVYNMAIKHRMDCQPCNTAEEGKMKWRICMAM' + \
    'KGYWDTIGVDEHVHYQLEHMTLRHNNLLTWNMVLYSPAGFDCSPLWFRNCAFYWSKFKAE' + \
    'IQEECGYEYCNAVYHVQWSG' 

    seq1_aligned, seq2_aligned, glob_max_score = smithwaterman.main('submats/BLOSUM50', seq1, seq2)
    print('Score: %d' % glob_max_score)

    #longest  (1000)
    seq1 = 'RQWNQSRSIMHEPDRHCQITSRCIWYNHSWGARDEHCKLERTYEVLNLMNKFNFVGRKMC' + \
    'DKYIPTQDIRGPYWHYMNPDHADCMQAAGFYDLWQISDVANSDLEQDFPGECNMYSVKMT' + \
    'TTEAVANTAPRKGYTGGQFVHHCIRTQFHSDVAPKKTCSLEVIHIMVCWEQKYCVQEFSM' + \
    'RHDQGVGWSTWMSPFKLRSMYNILGHAAKQLSPNKTDSWANYKENEHSKQTWITGLVRYE' + \
    'FYMGPQAGLKDGLSNCLPPSTRVDVEHQIYWNCQQAWFECGYATWYANWMMEGHPQCVKS' + \
    'YDCIRFIDASGSGNMAKTKGAWDSGWQSDLTERITYSTQFMHHTTAGPAIHSLTSSDLAL' + \
    'RGTDWVMQETIIMPKLNKFHLNINVDISNIALCFCFHLRCCFWSIEDWDFVSQYCVWNAP' + \
    'MSTETEFHGQWMFDNQYHWWVAPQYAREPVTKIARMQKNVYNNRWSAFTYMIEEFNNLAI' + \
    'DRQMEPFKAGIPITADVTHRVPRNMMFVKESLKDLGCGPNCMNGHKMDFGMEPYPTKLQS' + \
    'GYYMHTGKIMWALVMHAKVIFADPENCYLNSAIVHHVVISKRGCLHVELQAVSSIKMNFT' + \
    'NLYFFCEQQWPSETRIVSMSPVRNKDRKGAHPVTRGPYSMCALTRWMLNPGHHHGKGCEP' + \
    'MYVTKEVWTCKMVIRVRIHPFPGSRWFCRRGNPLYEYSDCQACIHQQEHRFWPLKPNDVC' + \
    'MRHEPMHWALWHKWQPKEIGMEYIMMARVAVQIGKLQAWNILFTYMYDKPPWGLVTQHEP' + \
    'EHWFCWSHMRCYRTQTIMFYGEFHDCLFAYFRCLYRYLCTLFHWVQFFPWWGWATCDKRQ' + \
    'KHLIIDNLTKKPNVPEQHTCCNCMRLYGFDDAMYFFFDSFNGITKGGKHTWRKYIWQNHY' + \
    'DCLFEYQVYQESFTLGWSDAAGCAYMHERFDMPCKLWMVYWREEPNQYNRPNDQDPRIKD' + \
    'VNPCWDLHIEDFESEFRIQWDIWVVCCPYDCCCISQNAWL'

    seq2 = 'INLWKVQSFCLMRCYMYCDTEPWGTTEYDHGQGWMPLTNNMYDRQCLDMLEGSAFPVLRP' + \
    'RTDMNITLDFFERSPLKWIDQVSDDFRDKDWYNSFVEYRCNLQHMWELFEGGGDTQRVSC' + \
    'GAKSHEFIVPSSPHCFKVYLWGCGRCEYRTHNGGQTPEWIALWNWDRSQQYMETCLLGWW' + \
    'EPHRTMIYYNEFQHWAVAPRREFDKEPGMNNHDQNKTTYRNWVRKCSTVAVVYDIGWVYT' + \
    'KCKAGYCYILWSHYLVAIPDPCPMFTTMYSHCCVNTHWERMHWRMDPDAIISLSTNIWEK' + \
    'YEIAQIHPTWMDIALWAHLAIVGNGWFGSINIFFHMMDMQDQCREKQHDQYFSDSAANIS' + \
    'LEPKPFHGHGCNNTVWEMNSEMTNTYGQWDMWTCCGHTTASAGLLYESFPWQCGGLNHYE' + \
    'RNPAFTLMQDMHCEYRNPSRICVCFFNEYLTFPGNPFCREVKVDVWRMIAWDYWISRKRL' + \
    'WSSHHIWNCQQGVTTEMFAFKVRAPMKKMCGNHKRTTCRQYAHAIIIGDGVHFSSELELY' + \
    'IEMCHQQFIKSQFQSKAVVEAEVFKMVCVQRIDAMLEICMMILCSHIHTEPFHGKGCMFA' + \
    'YAAFWKSLYEWKIPTLHFPDHGEFRVYRDMSAKDGPCTCRHLAQLYSIYGAFPKPWYHVM' + \
    'SIAIWPNNVTQTNCCNPDWDKKIMRNNNQVSCLPWATRPMKEWHGTDYLVPCSVFQHPLP' + \
    'WGNIVDYFTKAQEYCQIKKSCYHCPACAQEHSTGHVRTKKWDMGTFNWICMGEIIIVDKE' + \
    'ARQSYELPAQKHKNDMEDCGWQFDGMDRYFKERLDVYARNAPQHLMVKVYIQKQLFGWNK' + \
    'RNWGCWPDKKWWHYPVWQVLKARFEDPVNISSLYAVFMLMNEGQRTTQTHRHPWSQAAML' + \
    'NQNDKGTPSESKDDLSHNMVQPRVVMWSTASMDLMPSRTHRCQKCFYLHLIYGTYMGQNF' + \
    'EGRFNECQVKHKYIPFVIIHPILHPCYSFQFYFAANRRAA'

    seq1_aligned, seq2_aligned, glob_max_score = smithwaterman.main('submats/BLOSUM50', seq1, seq2)
    print('Score: %d' % glob_max_score)

    return